# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 1
new_float pixel 1

# Hide borders
hide_edge_borders none

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft:monospace 11

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+q kill

# start program launcher
bindsym $mod+d exec --no-startup-id dmenu_recency

# Start Applications
bindsym $mod+F2 exec qutebrowser
#bindsym $mod+F2 exec firefox
bindsym $mod+F3 exec kitty ranger
bindsym $mod+F4 exec kitty ikhal
bindsym $mod+F5 exec kitty mutt
bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"
bindsym Print exec --no-startup-id i3-scrot
bindsym $mod+Print --release exec --no-startup-id i3-scrot -w
bindsym $mod+Ctrl+x --release exec --no-startup-id xkill

# change focus
focus_follows_mouse yes
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
#workspace_auto_back_and_forth yes

# split orientation
bindsym $mod+v split toggle;exec notify-send 'Toggle split'
bindsym $mod+f fullscreen toggle

bindsym $mod+e layout toggle split

bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle
bindsym $mod+Shift+s sticky toggle

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9

# Open applications on specific workspaces
assign [class="(?i)office|(?i)tex"] 6
assign [class="(?i)wine"] 9

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Autostart applications
exec --no-startup-id nitrogen --restore
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id redshift
exec --no-startup-id picom -CGb
exec_always --no-startup-id setcursor

# Control keyboard
exec_always --no-startup-id numlockx on
# For keyboard layout toggle run once:
# localectl --no-convert set-x11-keymap be,ch pc105 ,fr grp:shifts_toggle
# i.e. toggle between AZERTY BE and QWERTZ CH by pressing both shift keys.

# Control external displays
set $displayMode "Set display mode [l]aptop [h]dmi"
bindsym $mod+p mode $displayMode
mode $displayMode {
    bindsym l exec "xrandr --output eDP-1 --auto && xrandr --output HDMI-1 --off && xrandr --output DP1 --off", mode "default"

    bindsym h exec "xrandr --output eDP-1 --primary --auto && xrandr --output HDMI-1 --mode 1920x1080 --left-of eDP-1 --rotate normal", mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Control screen brightness
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight +25
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -25

# Control sound volume
bindsym $mod+Ctrl+m exec kitty alsamixer
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer set Master 3%+
bindsym XF86AudioLowerVolume exec --no-startup-id amixer set Master 3%-
bindsym XF86AudioMute exec --no-startup-id amixer set Master toggle

# Theme colors
set_from_resource   $Background     background
set_from_resource   $Foreground     foreground
set_from_resource   $Black          color0
set_from_resource   $DarkGray       color8
set_from_resource   $DarkRed        color1
set_from_resource   $LightRed       color9
set_from_resource   $DarkGreen      color2
set_from_resource   $LightGreen     color10
set_from_resource   $DarkYellow     color3
set_from_resource   $LightYellow    color11
set_from_resource   $DarkBlue       color4
set_from_resource   $LightBlue      color12
set_from_resource   $DarkPurple     color5
set_from_resource   $LightPurple    color13
set_from_resource   $DarkCyan       color6
set_from_resource   $LightCyan      color14
set_from_resource   $LightGray      color7
set_from_resource   $White          color15
set_from_resource   $Cursor         cursorColor

# class                 border       backgr.     text        indic.       child_border
client.focused          $LightPurple $DarkPurple $Foreground $Cursor      $LightPurple
client.focused_inactive $DarkGray    $Background $Foreground $Background  $DarkGray
client.unfocused        $DarkGray    $Background $LightGray  $Background  $DarkGray
client.urgent           $DarkRed     $DarkRed    $LightGray  $LightRed    $DarkRed
client.placeholder      $Background  $Background $DarkGray   $DarkGray    $Background
client.background       $Background


###########################
### Settings for i3-bar ###
###########################
bar {
    status_command i3status
    i3bar_command i3bar
    position bottom
    tray_output none

    bindsym button4 nop
    bindsym button5 nop

    colors {
        background $Background
        statusline $Foreground
        separator $Background
        # class             border          background      text
        focused_workspace   $LightPurple    $DarkPurple     $Foreground
        active_workspace    $Background     $DarkBlue       $Foreground
        inactive_workspace  $Background     $Background     $LightGray
        urgent_workspace    $Background     $DarkRed        $Foreground
    }
}


#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 5
gaps outer -4

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
